{
    "name": "grid-apps",
    "version": "4.0.7",
    "description": "grid.space 3d slice & modeling tools",
    "author": "Stewart Allen <sa@grid.space>",
    "license": "MIT",
    "private": false,
    "repository": {
        "type": "git",
        "url": "https://github.com/gridspace/apps.git"
    },
    "keywords": [
        "grid.space",
        "kiri:moto",
        "kirimoto",
        "kiri",
        "3d",
        "CAM",
        "laser",
        "gcode",
        "slicer"
    ],
    "engines": {
        "node": ">=18.0.0"
    },
    "dependencies": {
        "@fortawesome/fontawesome-free": "^6.1.1",
        "@gridspace/app-server": "^0.0.15",
        "@gridspace/net-level-client": "^0.2.3",
        "@tracespace/parser": "^5.0.0-next.0",
        "@tweenjs/tween.js": "^16.6.0",
        "base64-js": "^1.5.1",
        "buffer-crc32": "^0.2.13",
        "compression": "^1.7.4",
        "connect": "^3.7.0",
        "earcut": "^2.2.3",
        "express-useragent": "^1.0.13",
        "jszip": "^3.7.1",
        "manifold-3d": "^2.5.1",
        "moment": "^2.29.4",
        "serve-static": "^1.14.1",
        "three": "^0.166.0",
        "three-mesh-bvh": "^0.5.21",
        "uglify-js": "3.14.5",
        "validator": ">=13.7.0",
        "ws": "^7.5.5"
    },
    "devDependencies": {
        "@electron/notarize": "latest",
        "dotenv": "latest",
        "electron": "latest",
        "electron-builder": "latest",
        "fs-extra": "^11.2.0",
        "node-fetch": "^3.3.2",
        "terser-webpack-plugin": "^5.3.10",
        "webpack": "^5.92.1",
        "webpack-cli": "^5.1.4"
    },
    "scripts": {
        "start": "npm run prebuild && electron .",
        "start-dev": "npm run prebuild && electron . --devel",
        "start-dbg": "npm run prebuild && electron . --debugg",
        "start-ddb": "npm run prebuild && electron . --devel --debugg",
        "build": "npm run prebuild && electron-builder",
        "build-debug": "npm run prebuild && DEBUG=electron-builder electron-builder",
        "build-linux": "npm run build -- --linux --x64",
        "build-linux-arm": "npm run build -- --linux --arm64",
        "build-win": "npm run build -- --win --x64",
        "build-win-arm": "npm run build -- --win --arm64",
        "build-mac": "npm run build -- --mac --arm64",
        "build-mac-intel": "npm run build -- --mac --x64",
        "mklinks": "find src web -type l | xargs -I{} sh -c 'echo \"{},$(readlink {})\"' > links.csv",
        "mac-verify": "spctl --assess -vv --type install dist/*/*.app",
        "prebuild": "node bin/electron-pre.js",
        "postbuild": "node bin/electron-post.js",
        "preinstall": "node bin/install-pre.js; npx webpack --config bin/webpack-three.js"
    },
    "main": "app-el.js",
    "build": {
        "appId": "space.grid.kiri",
        "productName": "KiriMoto",
        "artifactName": "KiriMoto-${os}-${arch}.${ext}",
        "files": [
            {
                "from": "tmp/src",
                "to": "src",
                "filter": [
                    "**/*"
                ]
            },
            {
                "from": "tmp/web",
                "to": "web",
                "filter": [
                    "**/*"
                ]
            },
            {
                "from": "tmp/mod",
                "to": "mod",
                "filter": [
                    "**/*"
                ]
            },
            "bin/*",
            "conf/**/*",
            "data/**/*",
            "dist/**/*",
            "app-el.js",
            "app.js",
            "package.json"
        ],
        "extraFiles": [],
        "directories": {
            "output": "dist"
        },
        "win": {
            "icon": "bin/GS.ico",
            "target": [
                "nsis",
                "zip"
            ]
        },
        "nsis": {
            "oneClick": false,
            "allowToChangeInstallationDirectory": true,
            "allowElevation": true
        },
        "mac": {
            "icon": "bin/GS.icns",
            "category": "public.app-category.utilities",
            "hardenedRuntime": true,
            "gatekeeperAssess": false,
            "entitlements": "bin/electron-entitlements.plist",
            "entitlementsInherit": "bin/electron-entitlements.plist",
            "target": [
                "dmg",
                "zip"
            ]
        },
        "linux": {
            "icon": "bin/GS.png",
            "target": [
                "AppImage",
                "zip"
            ]
        },
        "afterSign": "bin/electron-notarize.js"
    }
}
